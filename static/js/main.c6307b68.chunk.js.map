{"version":3,"sources":["components/Button.js","components/Nav.js","components/DaysLabels.js","components/Day.js","components/Error.js","components/NewTask.js","components/Tasks.js","components/FullTask.js","components/fethTasks.js","components/isValid.js","App.js","index.js"],"names":["Button","props","classes","content","handleClick","spanClassName","className","onClick","Nav","navigation","selectMonth","selectYear","buttonAddTask","selectButton","displayMonth","displayYear","buttonPrev","buttonNext","buttonToday","month","year","setMonthIndex","setYear","handleNewTaskModal","goToday","DaysLabels","Fragment","Day","date","id","tasks","e","Error","NewTask","buttonClose","buttonAdd","newTask","form","handleAddNewTask","handleFormChange","newTaskDate","newTaskPriority","newTaskTitle","newTaskContent","noTaskTitle","noTaskContent","type","value","onChange","target","htmlFor","checked","placeholder","name","cols","rows","Tasks","setTaskAsDone","removeTask","length","list","taskDoneBtn","taskDeleteBtn","buttonsBox","sort","a","b","replace","tasksList","map","task","title","priority","classList","done","ID","key","FullTask","handleEditTask","spanBtnOk","spanBtnDelete","spanBtnEdit","taskEditBtn","titleStyle","fullTaskDate","mainBox","contentBox","contentCss","exportTasks","localStorage","setItem","JSON","stringify","importTasks","getItem","parse","isValid","isTitle","isContent","that","noValid","setState","error","App","getTodayDate","y","m","d","today","day","Date","getDate","getMonth","getFullYear","prev","state","monthIndex","getPrevMonthDays","days","i","getDay","push","isToday","getID","getDays","hollyday","isTask","months","index","contains","prevState","isFullTask","isDayTasks","forEach","editTask","editedTask","newTaskClassList","preventDefault","indexOf","splice","fullTask","showDayTaskList","dayTasks","prevEventTarget","eventTarget","showFullTask","prevFullTask","stopPropagation","chceckIfResize","window","addEventListener","this","newTaskCategory","styles","handleError","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6307b68.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button = (props)=> {\n    \n    //attr for each button\n    const {classes, content, handleClick, spanClassName} = props;\n\n    return (\n        /*Button component require classes for css, \n        handleClick, content for display button text , \n         or spanClassName for font awsome  */\n        <button \n            className={classes}\n            onClick={handleClick}\n        >\n        <span\n        className={spanClassName}>\n            {content}\n        </span>\n        </button>\n\n    );\n};\n\nexport default Button;","import React from 'react';\nimport Button from './Button';\n\nconst Nav = (props)=> {\n    \n    //render nav bar\n    const classes = {\n        //css classes\n        navigation: 'navigation',\n        selectMonth: 'select select--month',\n        selectYear: 'select select--year',\n        buttonAddTask: 'button button--add-task',\n        selectButton :'select select__button',\n        displayMonth: 'select__display-span select__display-span--month',\n        displayYear: 'select__display-span select__display-span--year',\n        buttonPrev: 'button button--prev',\n        buttonNext : 'button button--next',\n        buttonToday: 'button button--today'\n    };\n\n    const {\n            navigation,\n            selectMonth, \n            selectYear,\n            buttonAddTask,\n            selectButton,\n            displayMonth,\n            displayYear,\n            buttonPrev,\n            buttonNext,\n            buttonToday\n        } = classes;\n\n    const {month, year, setMonthIndex, setYear, handleNewTaskModal, goToday} = props;\n\n    return(\n\n        <nav className={navigation}>\n\n            <div className=\"navigation__wrapper\">\n\n                <div className={selectMonth}>\n                    \n                    <Button \n                        classes={buttonPrev}\n                        handleClick={setMonthIndex}\n                    />\n\n                    <span className={displayMonth}>{month}</span>\n\n                    <Button \n                        classes={buttonNext}\n                        handleClick={setMonthIndex}\n                    />\n\n                </div>\n\n                <div className={selectYear}>\n\n                    <Button\n                        classes={buttonPrev}\n                        handleClick={setYear}\n                    />\n\n                    <span className={displayYear}>{year}</span>\n\n                    <Button \n                        classes={buttonNext}\n                        handleClick={setYear}\n                    />\n\n                </div>\n\n            </div>\n\n            <div className={selectButton}>\n\n                <Button \n                    classes={buttonToday}\n                    content={'Today'}\n                    handleClick={goToday}\n                />\n\n                <Button \n                    classes={buttonAddTask}\n                    spanClassName={'fas fa-edit'}\n                    handleClick={handleNewTaskModal}\n                />\n\n            </div>\n\n        </nav>\n\n    );\n};\n\nexport default Nav;","import React from 'react';\n\nconst DaysLabels = ()=> {\n\n    return (\n\n        <React.Fragment>\n\n            <span className=\"labels__day labels__day--sunday\">SUN</span>\n            <span className=\"labels__day\">MON</span>\n            <span className=\"labels__day\">TUE</span>\n            <span className=\"labels__day\">WED</span>\n            <span className=\"labels__day\">THR</span>\n            <span className=\"labels__day\">FRI</span>\n            <span className=\"labels__day\">SAT</span>\n\n        </React.Fragment>\n\n    );\n    \n};\n\nexport default DaysLabels;","import React from 'react';\n\n//represents each day in calendar\nconst Day = (props)=> {\n\n    //attr of each day object\n    const {date,classes, handleClick, id, tasks} = props;\n\n    return (\n\n        <div \n            className={classes}\n            id={id}\n            tasks={tasks}\n            onClick={(e)=> handleClick(e,tasks)} // show tasks list for each day\n        >\n            {date}\n        </div>\n    )\n    \n};\n\nexport default Day;","import React from 'react';\n\nconst Error = (props)=> {\n\n    const {content} = props;\n\n    //display error msg\n    return (\n\n        <div\n            className={'error'}\n        >\n        {content}\n        </div>\n\n    );\n    \n};\n\nexport default Error;","import React from 'react';\nimport Button from './Button';\nimport Error from './Error';\n\nconst NewTask = (props)=> {\n\n    //add new task form modal\n    const classes = {\n        //css classes\n        buttonClose:'button button--close',\n        buttonAdd: 'button button--add-task button--add-task--newTask',\n        newTask: 'newTask',\n        form: 'newTask__form',\n    };\n\n    const {\n        buttonClose, \n        buttonAdd, \n        newTask, \n        form\n    } = classes;\n\n    const {\n        handleNewTaskModal, \n        handleAddNewTask, \n        handleFormChange, \n        newTaskDate, \n        newTaskPriority, \n        newTaskTitle, \n        newTaskContent,\n        noTaskTitle,\n        noTaskContent\n    } = props;\n    \n    return(\n\n        <div className={newTask}>\n\n        <Button\n            classes={buttonClose}\n            handleClick={handleNewTaskModal}\n        />\n\n            <form className={form}>\n\n                <input \n                    type=\"date\" \n                    id=\"date\" \n                    value={newTaskDate}\n                    onChange={(e)=> handleFormChange(e.target.value, 'newTaskDate')}\n                />\n\n                <label \n                    htmlFor=\"priority\">Priority\n                    <input \n                        type=\"checkbox\" \n                        id=\"priority\" \n                        checked={newTaskPriority}\n                        onChange={(e)=> handleFormChange(e.target.checked, 'newTaskPriority')}\n                    />\n                </label>\n                \n                <input \n                    type=\"text\" \n                    id=\"title\"\n                    placeholder=\"Title\"\n                    value={newTaskTitle}\n                    onChange={(e)=> handleFormChange(e.target.value, 'newTaskTitle')}\n                />\n\n                {noTaskTitle&&<Error content={\"Title required\"}/>}\n\n                <textarea \n                    onChange={(e)=> handleFormChange(e.target.value, 'newTaskContent')}\n                    value={newTaskContent}\n                    placeholder=\"Message\"\n                    name=\"content\" \n                    id=\"content\" \n                    cols=\"30\" \n                    rows=\"10\"\n                >\n                \n                </textarea>\n\n                {noTaskContent&&<Error content={\"Content required\"}/>}\n\n                <Button\n                    classes={buttonAdd}\n                    content={'Add task'}\n                    handleClick={handleAddNewTask}\n                />\n\n            </form>\n\n        </div>\n\n    );\n    \n};\n\nexport default NewTask;","import React from 'react';\nimport Button from './Button';\n\nconst Tasks = props=> {\n    const {tasks, handleClick, setTaskAsDone, removeTask} = props;\n    \n    if(tasks.length<1) return[]; //if state.tasks contains no task a empty array returned;\n\n    const classes = {\n        //css classes\n        list: 'dayTasks__list',\n        taskDoneBtn:'button button__task button__task--done',\n        taskDeleteBtn: 'button button__task button__task--delete',\n        taskEditBtn: 'button button__task button__task--edit',\n        buttonsBox: 'button__task-box'\n    };\n\n    const {\n        list,\n        taskDoneBtn,\n        taskDeleteBtn,\n        buttonsBox\n    } = classes;\n\n   tasks.sort((a,b)=> {\n\n       // sort tasks by date \n       const dateA = a.id.date.replace(/[-]/g,'');\n       const dateB = b.id.date.replace(/[-]/g,'');\n\n       return (\n           dateA - dateB\n       );\n\n   });\n\n    const tasksList = tasks.map(task=> {\n\n        const {title, priority, id, classList, done} = task;\n        const ID = `${id.date}-${id.title}`;\n        let classes = classList;\n\n        if(priority) classes = `${classList} priority`;\n        if(done) classes = `${classes} done`;\n\n        return (\n            \n            <li\n                className={classes}\n                key={ID}\n                id={ID}\n                onClick={(e)=> handleClick(e,task)}\n            >\n            <p>{title}</p>\n            \n            <div className={buttonsBox}>\n\n                <Button\n                    classes={taskDoneBtn}\n                    spanClassName={'fas fa-check'}\n                    handleClick={(e)=> setTaskAsDone(e, id)}\n                />\n\n                <Button\n                    classes={taskDeleteBtn}\n                    spanClassName={'fas fa-times'}\n                    handleClick={(e)=> removeTask(e, id)}\n                />\n\n            </div>\n            \n            </li>\n        );\n\n    });\n\n    return (\n        \n        //return task main list or day tasks according of handed tasks array\n        <ul className={list}>\n\n            {tasksList}\n\n        </ul>\n        \n    )\n};\n\nexport default Tasks;","import React from 'react';\nimport Button from './Button';\n\nconst FullTask = props => {\n    \n    //render full task content\n    if(!props.task) return;\n\n    //attr of each task\n    const {title, date, content, priority, id, done} = props.task;\n\n    const {setTaskAsDone, removeTask, handleEditTask, task} = props;\n    \n    //css classes\n    const classes = {\n        spanBtnOk: 'fas fa-check',\n        spanBtnDelete: 'fas fa-times',\n        spanBtnEdit: 'fas fa-edit',\n        buttonsBox: 'button__task-box button__task-box--full',\n        taskDeleteBtn: 'button button__task button__task--delete',\n        taskEditBtn: 'button button__task button__task--edit',\n        taskDoneBtn:'button button__task button__task--done',\n        titleStyle: 'fullTask__title',\n        mainBox: 'fullTask',\n        fullTaskDate: 'fullTask__date',\n        contentBox: 'fullTask__content-box',\n        contentCss: 'fullTask__content'\n    };\n\n    const {\n        spanBtnOk,\n        spanBtnDelete,\n        buttonsBox,\n        spanBtnEdit,\n        taskDeleteBtn,\n        taskEditBtn,\n        taskDoneBtn,\n        titleStyle,\n        fullTaskDate,\n        mainBox,\n        contentBox,\n        contentCss\n    } = classes;\n\n    return (\n\n        <div className={!done? mainBox: `${mainBox} done`}>\n\n            <div className={buttonsBox}>\n\n                <Button\n                    classes={taskDoneBtn}\n                    spanClassName={spanBtnOk}\n                    handleClick={(e)=> setTaskAsDone(e,id)}\n                />\n\n                <Button\n                    classes={taskEditBtn}\n                    spanClassName={spanBtnEdit}\n                    handleClick={(e)=> handleEditTask(e, task)}\n                />\n                    \n                <Button\n                    classes={taskDeleteBtn}\n                    spanClassName={spanBtnDelete}\n                    handleClick={(e)=> removeTask(e, id)}\n                />\n\n            </div>\n\n            <div>\n\n                <p className={priority?`${titleStyle} priority`: titleStyle}>{title}</p>\n                <p className={fullTaskDate}>{date}</p>\n\n            </div>\n\n            <div className={contentBox}>\n\n                <p className={contentCss}>{content}</p>\n\n            </div>\n\n        </div>\n\n    );\n};\n\nexport default FullTask;","const exportTasks = (tasks)=> {\n\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n\n};\n\nconst importTasks = ()=> {\n\n    const tasks = localStorage.getItem('tasks')? JSON.parse(localStorage.getItem('tasks')):[];\n\n    return tasks;\n\n};\n\nexport {\n    exportTasks,\n    importTasks\n};","const isValid = (isTitle, isContent, that)=> {\n    \n    let title, content;\n\n    if(isTitle === '' ) {\n      title = true;\n    }else {\n      title = false;\n    };\n\n    if(isContent === '') {\n      content = true;\n    }else {\n      content = false;\n    }\n\n    const noValid = {\n      title, content\n    };\n\n    that.setState({\n\n      error: {\n        title: noValid.title,\n        content: noValid.content\n      }\n      \n    });\n    \n    if(noValid.title || noValid.content) return false;\n\n    return true;\n\n};\n\nexport default isValid;\n","import React from 'react';\nimport './App.scss';\nimport Nav from './components/Nav';\nimport DaysLables from './components/DaysLabels';\nimport Day from './components/Day';\nimport NewTask from './components/NewTask';\nimport Tasks from './components/Tasks';\nimport FullTask from './components/FullTask';\nimport {exportTasks, importTasks} from './components/fethTasks';\nimport isValid from './components/isValid';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      days: [],// days object created according to days in month;\n      month:'', //month name;\n      year: new Date().getFullYear(),\n      monthIndex: new Date().getMonth(),\n      newTask: false,//determ if add new task modal is on;\n      newTaskDate: this.getTodayDate().date,// date input default content;\n      newTaskPriority: false,//determ tasks css classes;\n      newTaskClassList: 'dayTasks__list-item', // dafault task css class list;\n      newTaskTitle: '',// new task modal title input value;\n      newTaskContent: '', //new task modal content textarea value;\n      tasks: importTasks(), // import task list from local storage;\n      isDayTasks: false,// determ css for day if contain task\n      prevEventTarget: '',//handle display proper task by click;\n      prevFullTask:'',//handle display proper task by click;\n      dayTasks: [], //tasks assigned to each day;\n      isFullTask: false,//determ if full task msg is displayed;\n      fullTask: null,//pass task object to display full msg;\n      editedTask: null,// pass task if its for edition;\n      //handle error msg\n      error: {\n        title: false,\n        content: false\n      },\n\n    };\n\n    this.months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n  };\n\n\n  // handle dates and determ days amount to create rendered days objects\n  getTodayDate = (y, m, d)=> {\n    //set default date to date input state\n    let today;\n    if(y&&m&&d) {\n      today = new Date(y, m, d)\n    }else {\n      today = new Date();\n    };\n    \n    const day = today.getDate();\n    const month = today.getMonth();\n    const year = today.getFullYear();\n    const date = `${year}-${month+1<10?\"0\"+(month+1):(month+1)}-${day<10?\"0\"+day:day}`;\n    return ({\n      day, month, year, date\n    });\n  };\n\n  getDate = (prev)=> { \n    //get date object of selected date range\n    const date = new Date(this.state.year, prev?this.state.monthIndex:this.state.monthIndex+1,0);\n    return date;\n  };\n\n  getPrevMonthDays = (days)=> {\n    //create \"blank\" previous month days\n    \n    for(let i=0; i<=this.getDate('prev').getDay(); i++) {\n\n      const day = {\n        date: `blank-${i+1}`,\n        tasks:{},\n        classes:'blank'\n      };\n\n      days.push(day);\n\n    };\n\n    return days;\n  };\n\n  isToday = (date)=>{\n\n    //check when is today date\n    if (\n      this.getTodayDate().day === date &&\n      this.getTodayDate().month === this.state.monthIndex &&\n      this.getTodayDate().year === this.state.year\n      ) return  true;\n\n      return false;\n\n  };\n\n  getID = (y, m, d)=> {\n    //set date like formated id for days, and tasks;\n    const  today = new Date(y, m, d);\n    \n    const day = today.getDate();\n    const month = today.getMonth()+1;\n    const year = today.getFullYear();\n    const date = `${year}-${month<10?\"0\"+(month):(month)}-${day<10?\"0\"+day:day}`;\n    \n    return  date;\n  };\n\n  getDays = ()=> {\n    //create day object acording days in month\n    const days = [];\n    this.getPrevMonthDays(days);\n    let hollyday, date;\n    \n    for (let i=0; i<this.getDate().getDate(); i++) {\n      date = i+1; \n      const ID = this.getID(this.state.year,this.state.monthIndex, date);\n      const isSunnday = new Date(this.state.year,this.state.monthIndex, date).getDay();\n      isSunnday===0? hollyday=true:hollyday=false;\n      \n      const day = {\n        id: ID,\n        date: date,\n        tasks: this.isTask(ID),\n        classes:'day',\n        hollyday: hollyday,\n        today:this.isToday(date)\n      };\n      days.push(day);\n    };\n    return days\n  };\n\n\n  //handle date selection\n  selectMonth = ()=> {\n    //set month on load\n    this.setState({\n      month: this.months[this.state.monthIndex],\n      days: this.getDays()\n    });\n  };\n\n  setMonthIndex = (e)=> {\n    //set month on btn click\n    let index = this.state.monthIndex;\n    //go to prev date\n    if(e.target.classList.contains('button--prev')) {\n      index--;\n      if(index<0) {\n        index = 11;\n        this.setState(prevState=>({\n          year: prevState.year -1,\n        }));\n      };\n    };\n    //go to next date\n    if(e.target.classList.contains('button--next')) {\n      index++;\n      if(index>11) {\n        index = 0;\n        this.setState(prevState=>({\n          year: prevState.year + 1\n        }));\n      };\n    };\n    \n    this.setState(prevState=>({\n      monthIndex: prevState.monthIndex = index,\n      month: prevState.month = this.months[prevState.monthIndex]\n    }),()=>{this.setState({days: this.getDays()})});\n\n  };\n\n  goToday = ()=> {\n    // on click return to present month\n    const index = new Date().getMonth();\n    const month = this.months[index];\n    const year = new Date().getFullYear();\n\n    this.setState({\n\n      monthIndex: index,\n      month: month,\n      year: year,\n      isFullTask: false,\n      isDayTasks:false\n    },()=>{\n      this.setState({\n        days: this.getDays()\n      });\n\n    });\n    \n  };\n  \n\n  setYear = (e)=> {\n    //change year on btn click\n    let index = this.state.year;\n    //got to prev year\n    if(e.target.classList.contains('button--prev')) index--;\n    //got to nex year\n    if(e.target.classList.contains('button--next')) index++;\n\n    this.setState(prevState=>({\n      monthIndex: prevState.monthIndex,\n      year: prevState.year = index,\n      days: this.getDays()\n    }));\n    \n  };\n\n  //handle tasks\n  isTask = (ID)=> {\n    //determ if each day contain tasks\n    const tasks = [];\n\n    this.state.tasks.forEach(task=> {\n\n      if(task.id.date === ID) tasks.push(task);\n\n    });\n\n    return tasks;\n\n  };\n\n  editTask = ()=> {\n    //fil add new task width edited task content\n    const tasks = this.state.tasks;\n    const {title, date, content, priority, classList} = this.state.editedTask;\n\n    this.setState({\n      newTaskTitle: title,\n      newTaskDate: date,\n      newTaskContent: content,\n      newTaskClassList: classList,\n      newTaskPriority: priority,\n      tasks: tasks\n    });\n\n  }\n\n  handleNewTaskModal = (e, task = null)=> {\n    //open \"add new task\" modal\n    if(task) {\n      this.setState({\n        editedTask: task\n      }, ()=> this.editTask());\n    };\n\n    this.setState(prevState=>({\n      newTask: !prevState.newTask\n    }));\n\n  };\n\n  handleAddNewTask = (e)=> {\n    //create new task object fom form inputs in state, and add to render array\n  \n    e.preventDefault();\n\n    const {newTaskDate, newTaskPriority, newTaskTitle, newTaskContent, newTaskClassList, editedTask} = this.state;\n    const tasks = this.state.tasks;\n\n    if(editedTask) {\n      //if editing task find old task in array and replace with new one\n      tasks.forEach(task=> {\n\n        if(task.id === editedTask.id) {\n          let index = tasks.indexOf(task);\n          tasks.splice(index,1);\n        };\n  \n      });\n    };\n    \n    //add new task\n    if(!isValid(newTaskTitle, newTaskContent, this)) return;\n\n    const task = {\n      id: {\n        date: newTaskDate,\n        title: newTaskTitle\n      },\n      date: newTaskDate,\n      priority: newTaskPriority,\n      title: newTaskTitle,\n      classList: newTaskClassList,\n      content: newTaskContent,\n      done:false\n    };\n\n    tasks.push(task);\n\n    this.setState({\n      // reset form inputs\n      fullTask: task,\n      tasks: tasks,\n      newTaskPriority: false,\n      newTaskTitle: '',\n      newTaskContent: '',\n      newTaskClassList: 'dayTasks__list-item',\n      newTaskDate: this.getTodayDate().date\n    },()=> {\n      this.selectMonth();//re render to mark days with tasks\n      this.handleNewTaskModal();// close \"add new task\" modal\n      this.getDays();\n      exportTasks(this.state.tasks);\n      this.showDayTaskList();\n    });\n    \n  };\n\n  handleFormChange = (value, name)=> {\n    //handle changes in add new task form\n    this.setState({\n      [name]: value\n    });\n  };\n\n  showDayTaskList = (e, dayTasks)=> {\n    //display task list for each day on click it\n\n    if(!e) {\n      //if call on add new ewent\n        const tasks = this.isTask(this.state.prevEventTarget);\n        return this.setState({\n          dayTasks: tasks\n        });\n    };\n  \n    //if call by day click\n    if(dayTasks.length<1 && this.state.isDayTasks) return this.setState({\n      isDayTasks: false\n    });\n\n    if(dayTasks.length<1) return;\n\n    const prevEventTarget = this.state.prevEventTarget;\n    const eventTarget = e.target.id;\n    \n    if(prevEventTarget!==eventTarget) {\n      this.setState({\n        isDayTasks: true,\n        dayTasks: dayTasks,\n        prevEventTarget: eventTarget\n      });\n    }else if(prevEventTarget===eventTarget) {\n      this.setState(prevState=>({\n        isDayTasks: !prevState.isDayTasks,\n        dayTasks: dayTasks,\n        prevEventTarget: eventTarget\n      }));\n    };\n  };\n\n  showFullTask = (e,task) => {\n    //display full task msg, and determ with task was clicked\n    if(this.state.prevFullTask !== task) {\n\n      this.setState(prevState=>({\n        isFullTask: true,\n        fullTask: task,\n        prevFullTask: task\n      }));\n\n    }else {\n\n      this.setState(prevState=>({\n        isFullTask: !prevState.isFullTask,\n        fullTask: task,\n        prevFullTask: task\n      }));\n\n    };\n    \n  };\n\n  setTaskAsDone = (e, id) => {\n    e.stopPropagation();\n\n    const tasks = this.state.tasks;\n\n    tasks.forEach(task=>{\n\n      if(task.id === id){\n\n        task.done = !task.done\n\n      };\n\n    });\n\n    this.setState({\n      tasks: tasks\n    },()=> {\n\n      exportTasks(this.state.tasks); //export re writed task to local storage;\n      this.showDayTaskList();//render task list;\n\n    });\n    \n  };\n\n  removeTask = (e, id) => {\n    e.stopPropagation();\n\n    const tasks = this.state.tasks;\n\n    tasks.forEach(task=> {\n\n      if(task.id === id) {\n        let index = tasks.indexOf(task);\n        tasks.splice(index,1);\n      };\n\n    });\n\n    this.setState({\n\n      tasks: tasks,\n      isFullTask: false\n\n    },()=>{\n\n      exportTasks(); //export re writed task to local storage\n      this.showDayTaskList();//render task list\n\n      this.setState({\n        days: this.getDays()\n      });\n    });\n\n  };\n\n  chceckIfResize = ()=> {\n\n    //reset display view to default\n    window.addEventListener('resize', ()=> {\n      this.setState({\n        isFullTask: false\n      });\n\n    });\n\n  };\n\n  componentDidMount() {\n    //init calendar. month init days\n    \n    this.selectMonth();\n    importTasks(); //import tasks from local storage\n\n    this.chceckIfResize(); //reset display view to default\n  \n  };\n\n  //render main component\n\n  render (){\n    \n    const {\n      month, \n      year,\n      newTask, \n      newTaskDate, \n      newTaskCategory, \n      newTaskPriority,\n      newTaskTitle,\n      newTaskContent,\n      isDayTasks,\n      dayTasks,\n      tasks,\n      isFullTask,\n      fullTask,\n      error\n    } = this.state;\n    \n    const days = this.state.days.map(day=> {\n\n      //return array of days to render include html structure\n      const {date, tasks, classes, hollyday, today, id} = day;\n      let styles;\n      //define day css\n      if(!hollyday) styles = classes;\n      if(hollyday) styles = `${classes} sunday`;\n      if(today) styles = `${styles} today`;\n      if(today&&hollyday) styles = `${styles} todayIsSunday`;\n      if(tasks.length>0) styles = `${styles} day__isTask`;\n      \n      return (\n\n        <Day \n          key={date}\n          id={id}\n          tasks={tasks}\n          date={date}\n          classes={styles}\n          hollyday={hollyday}\n          handleClick={this.showDayTaskList}\n        />\n\n      );\n\n    });\n    \n    return (\n\n      //render main component\n      <div className=\"calendar\">\n\n          <Nav \n            //navigation component\n            month={month}\n            year={year}\n            setMonthIndex={this.setMonthIndex}\n            setYear={this.setYear}\n            handleNewTaskModal={this.handleNewTaskModal}\n            goToday={this.goToday}\n          />\n          \n          <main className=\"calendar__wrapper\">\n\n            {!isFullTask && <div\n              //main calendar component\n              className={\"day__box\"}\n                >\n                <DaysLables />\n                {days}\n              </div>\n             }\n            \n            { \n                isFullTask && \n                <FullTask \n                  task={fullTask} \n                  setTaskAsDone={this.setTaskAsDone}\n                  removeTask={this.removeTask}\n                  handleEditTask={this.handleNewTaskModal}\n                />\n              }\n\n            <div className={'dayTasks'}>\n\n              {isDayTasks && <Tasks\n                  tasks={dayTasks}\n                  handleClick={this.showFullTask}\n                  setTaskAsDone={this.setTaskAsDone}\n                  removeTask={this.removeTask}\n                />}\n                \n              { !isDayTasks && <Tasks\n                  tasks={tasks}\n                  handleClick={this.showFullTask}\n                  setTaskAsDone={this.setTaskAsDone}\n                  removeTask={this.removeTask}\n                />}\n\n            </div>\n          </main>\n\n          {newTask&&<NewTask \n            handleNewTaskModal={this.handleNewTaskModal} \n            handleAddNewTask={this.handleAddNewTask}\n            handleFormChange={this.handleFormChange}\n            handleError={this.handleError}\n            newTaskDate={newTaskDate}\n            newTaskCategory={newTaskCategory}\n            newTaskPriority={newTaskPriority}\n            newTaskTitle={newTaskTitle}\n            newTaskContent={newTaskContent}\n            noTaskTitle={error.title}\n            noTaskContent={error.content}\n          />}\n          \n      </div>\n\n    );\n\n  };\n\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n\n  <React.StrictMode>\n\n    <App />\n\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n\n);\n"],"sourceRoot":""}